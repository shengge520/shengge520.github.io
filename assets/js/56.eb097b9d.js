(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{387:function(t,l,e){"use strict";e.r(l);var r=e(19),s=Object(r.a)({},(function(){var t=this,l=t._self._c;return l("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[l("h1",{attrs:{id:"第一题-浏览器的渲染页面过程"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#第一题-浏览器的渲染页面过程"}},[t._v("#")]),t._v(" 第一题：浏览器的渲染页面过程")]),t._v(" "),l("ul",[l("li",[l("p",[t._v("a. 将HTML解析成html Dom树")])]),t._v(" "),l("li",[l("p",[t._v("b. 将CSS解析成css 规则树")])]),t._v(" "),l("li",[l("p",[t._v("c. 将html DOM树与css 规则树进行结合生成Render树")])]),t._v(" "),l("li",[l("p",[t._v("d. 布局")])]),t._v(" "),l("li",[l("p",[t._v("e. 绘制")]),t._v(" "),l("blockquote",[l("p",[t._v("注意:1.回流(reflow)：当浏览器发现某个部位发生了改变从而影响了布局，这个时候就需要倒回去重新渲染，这个过程就是reflow。常见的reflow有Tab切换,隐藏等。\n2.重绘(repaint)：就是当我们改变某个元素的背景色,文字颜色、边框颜色等等不影响它周围或内部布局的属性时,屏幕的一部分要重画,但是元素的几何尺寸和位置没有发生改变。eg:visibility:hidden\n减少回流:a.用transform做形变和位移;b.通过绝对位移来拖离层叠上下文，形成新的Render Layer。")])]),t._v(" "),l("blockquote",[l("p",[t._v("优化渲染效率:")])]),t._v(" "),l("ol",[l("li",[t._v("简化并优化CSS选择器，将嵌套层减少到最小")]),t._v(" "),l("li",[t._v("减少js对DOM操作")]),t._v(" "),l("li",[t._v("尽量用transform做形变和位移")])])])])])}),[],!1,null,null,null);l.default=s.exports}}]);